from typing import List
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []
        mapping = {
            "2": "abc",
            "3": "def",
            "4": "ghi",
            "5": "jkl",
            "6": "mno",
            "7": "pqrs",
            "8": "tuv",
            "9": "wxyz"
        }
        
        result = []
        
        def backtrack(index: int, current: str):
            if index == len(digits):
                result.append(current)
                return
            
            for ch in mapping[digits[index]]:
                backtrack(index + 1, current + ch)
        
        backtrack(0, "")
        return result
